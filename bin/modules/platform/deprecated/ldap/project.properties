# -----------------------------------------------------------------------
# Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.
# -----------------------------------------------------------------------

ldap.application-context=ldap-spring.xml

#switch logger off for directory server
log4j2.logger.ldapProtocolHandler.name=org.apache.directory.server.ldap.LdapProtocolHandler
log4j2.logger.ldapProtocolHandler.level=OFF

log4j2.logger.defaultAttributeTypeRegistry.name=org.apache.directory.server.schema.registries.DefaultAttributeTypeRegistry
log4j2.logger.defaultAttributeTypeRegistry.level=OFF

##################### LDAP SETTINGS ###################################
#
# LDAP connection settings
#
#######################################################################

# values: LDAP || ActiveDirectory || eDirectory || <YOUR OWN IMPLEMENTATION OF de.hybris.platform.ldap.connection.LDAPConnection>
ldap.server.type=LDAP

# ldap.server.url <IP|NAME>:<PORT> // default port is 389 (and 636 for SSL respectively)
ldap.server.url=

#
# server independent user settings
#
ldap.jndi.principals=
ldap.jndi.credentials=
ldap.server.root.dn=

# debugging (BER and SSL Tracing)
ldap.connection.enable.tracing=false

# for the following hybris users, no ldap authentification will be initiated
# change this only if you know exactly what you do !!!
ldap.local.accounts.only=admin; anonymous

#
# ActiveDirectory specific settings
#

# PagedResultsControl (1.2.840.113556.1.4.319) pagesize settings, < 1 will disable paging
ldap.activedirectory.pagedresultscontrol.pagesize=100
# FastBindConnectionControl (1.2.840.113556.1.4.1781) activation
ldap.activedirectory.fastbind.enable=true

#
# SSL certificate settings
#
# CAUTION: Tested in an OpenLDAP environment, only !!!!
#

# cacerts - the trusted certificates of directories and certificate authorities (e.g. Verisign etc.) used by the LDAP extension to establish server-authenticated SSL.

ldap.ssl.caKeystoreFile=../ext/ldap/config/security/cacerts
# if caKeystoreFile requires password, it can be provided with a property below
#ldap.ssl.caPassphrase=

# the keystore type defaults to Sun's JKS (at time of writting, the only keystore type that the default Sun security provider will handle

ldap.ssl.caKeystoreType=JKS

# clientcerts - the clients own certificates and private keys.  Importing private keys is quite tricky - refer to the sun docu (you can try importing pkcs#8, but it doesn't work reliably)

ldap.ssl.clientKeystoreFile=../ext/ldap/config/security/clientcerts
# if clientKeystoreFile requires password, it can be provided with a property below
#ldap.ssl.clientPassphrase=

# the keystore type defaults to Sun's JKS (at time of writting, the only keystore type that the default Sun security provider will handle

ldap.ssl.clientKeystoreType=JKS

# CAUTION: This this setting, will only be evaluated if 'ldap.security.protocol=ssl' was specified !!!
# ldap.jndi.socket.factory=de.hybris.platform.ldap.connection.ssl.JNDISocketFactory
ldap.jndi.socket.factory=

# ldap.security.protocol=ssl
ldap.security.protocol=

#
# Connection/Provider settings
#

#
# TODO
#
# To allow SSL connections to be pooled, include the string "ssl" in the com.sun.jndi.ldap.connect.pool.protocol System property.
# For example, to allow both plain and SSL connections to be pooled, set this System property to the string "plain ssl".

# connection pool settings (see http://java.sun.com/products/jndi/tutorial/ldap/connect/config.html)
ldap.pool.enabled=false
ldap.minimum.fail.backtime=90000
ldap.pool.init.size=1
ldap.pool.pref.size=10
ldap.pool.maxsize=50
ldap.pool.timeout=300000

# JNDI provider settings (see http://java.sun.com/j2se/1.4.2/docs/guide/jndi/spec/jndi/jndi.6.html)

ldap.jndi.factory=com.sun.jndi.ldap.LdapCtxFactory
ldap.jndi.version=v3
ldap.jndi.authentication=simple

# Not all connection creations are successful. If the LDAP provider cannot establish a connection within a certain timeout period,
# it aborts the connection attempt. By default, this timeout period is the network (TCP) timeout value,
# which is in the order of a few minutes. To change the timeout period, you use the "com.sun.jndi.ldap.connect.timeout" environment
# The value of this property is an integer representing the connection timeout in milliseconds.

ldap.jndi.connection.timeout=60000

configuration.view.blacklist.ldap=ldap.ssl.clientPassphrase,ldap.ssl.caPassphrase

# Allows to read converter files from untrusted locations
ldap.allow.file.converter=false

# Allows to read configuration files from untrusted locations in hAC
ldap.allow.file.configuration=false
