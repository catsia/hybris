<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.
-->
<!-- WARNING: This is the Spring WEB configuration file. If you want to replace items or managers you have to do this from the extensions 
	core configuration file (assistedservicewebservices/resources/assistedservicewebservices-spring.xml) -->

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
		   http://www.springframework.org/schema/context/spring-context.xsd
		   http://www.springframework.org/schema/util
		   http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<context:component-scan base-package="de.hybris.platform.assistedservicewebservices"  scope-resolver="de.hybris.platform.spring.IgnoreTenantScopeMetadataResolver" >
		<context:exclude-filter type="assignable" expression="de.hybris.platform.assistedservicewebservices.config.WebConfig"/>
	</context:component-scan>

	<import resource="config/cache-config-spring.xml"/>
	<import resource="config/security-spring.xml"/>
	<import resource="config/error-config-spring.xml"/>
	<import resource="config/field-mapping-spring.xml"/>
	<import resource="config/validators-spring.xml"/>

	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>/WEB-INF/messages/messages</value>
			</list>
		</property>
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	
	<!-- Spring managed FilterChain for hybris Filter stack -->
	<bean id="assistedservicewebservicesPlatformFilterChain" class="de.hybris.platform.servicelayer.web.PlatformFilterChain">
		<constructor-arg>
			<list>
				<!-- Filter that catches and resolves exceptions thrown from other filters. Can be uncommented if you need such functionality -->
				<ref bean="exceptionTranslationFilter" />
				<ref bean="log4jFilter" />
				<ref bean="tenantActivationFilter" />
				<!-- This filter creates new jalo session and close it after request is handled. -->
				<ref bean="restSessionFilter" />			

				<!-- If you want to track user session:
					- uncomment filter below 
					- comment or remove restSessionFilter above
					- comment or remove SessionHindingRequestFilter in web.xml -->
				<!-- ref bean="sessionFilter" /-->
				<ref bean="baseSiteMatchingFilter" />
				<!-- Security -->
				<ref bean="corsFilter"/>
				<ref bean="springSecurityFilterChain" />
				<ref bean="userMatchingFilter" />
				<ref bean="assistedServiceSessionFilter" />
			</list>
		</constructor-arg>
	</bean>

	<util:list id="filterExcludedUrls">
		<value>.*swagger.*</value>
		<value>.*swagger-ui.*</value>
		<value>.*api-docs.*</value>
	</util:list>

	<alias alias="baseSiteMatchingFilter" name="defaultBaseSiteMatchingFilter" />
	<bean id="defaultBaseSiteMatchingFilter" class="de.hybris.platform.assistedservicewebservices.filters.BaseSiteMatchingFilter">
		<property name="baseSiteService" ref="baseSiteService" />
		<property name="regexp" value="^/(?!(swagger)|(.*api-docs)|(csrf)|(webjars))([^/]+)" />
		<property name="excludedUrls" ref="filterExcludedUrls"/>
	</bean>

	<bean id="assistedServiceSessionFilter" class="de.hybris.platform.assistedservicewebservices.filters.AssistedServiceSessionFilter">
		<property name="assistedServiceFacade" ref="assistedServiceFacade"/>
		<property name="userMatchingService" ref="userMatchingService" />
		<property name="excludedUrls" ref="filterExcludedUrls"/>
	</bean>

	<bean id="restSessionFilter" class="de.hybris.platform.webservicescommons.filter.RestSessionFilter">
		<property name="sessionService" ref="sessionService" />
	</bean>

	<alias alias="userMatchingFilter" name="defaultUserMatchingFilter" />
	<bean id="defaultUserMatchingFilter" class="de.hybris.platform.assistedservicewebservices.filters.UserMatchingFilter">
		<property name="regexp" value="^/[^/]+/(?:users|orgUsers)/([^/]+)" />
		<property name="userService" ref="userService" />
		<property name="sessionService" ref="sessionService" />
		<property name="userMatchingService" ref="userMatchingService" />
		<property name="excludedUrls" ref="filterExcludedUrls"/>
	</bean>

	<!-- Filter that catches and resolves exceptions thrown from other filters. Can be added to filter chain if you need such functionality -->
	<alias alias="exceptionTranslationFilter" name="defaultExceptionTranslationFilter" />
	<bean id="defaultExceptionTranslationFilter" class="de.hybris.platform.webservicescommons.filter.ExceptionTranslationFilter">
		<property name="restHandlerExceptionResolver" ref="restHandlerExceptionResolver" />
	</bean>

	<!-- Beans needed for sample code -->

	<!-- API Endpoint Deactivation -->
	<bean id="assistedServiceEndpointRestrictionsInterceptor" parent="baseEndpointRestrictionsInterceptor">
		<constructor-arg name="specificConfigPrefix" value="assistedservicewebservices"/>
	</bean>
</beans>
